When would you want to use a remote repository rather than keeping all your work local?

    * I guess it would be useful to use a remote repository if you are working on a different 
      computer than where you have your code, and want to access your work from elsewhere 
      (provided that the remote code is updated)
    * You might also want to use the remote as a backup of your project. 
    * If there is more than one contributor to the project - and you do not share the same network 
      storage - a remote repository will be a necessity. I.e. open source development (but actually 
      any kind of development where the developers work from different locations)
      
Why might you want to always pull changes manually rather than having Git automatically stay 
up-to-date with your remote repository?

    It seems like manual is the key to the Git philosophy. I guess that is because it gives you
    better control of the project, and also better quality of the commits. 
    
    As for pulling changes automatically, this might lead to bringing into the local (original) 
    repository changes that you really don't want. Let's say you are working remotely and your code 
    is comitted but isn't tested yet. An automatic pull will break the code of the branch if it 
    happens at the wrong time.
    
Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

    Forks exist only on GitHub, and it is a copy of a repository
    Clones exist locally - you can clone another local repository on your computer, or , most often, 
    a clone is a local copy of a remote repository on GitHub.
    Common for clones and forks is that they are copies of complete repositories.
    A branch is a part of a repository, and can exist both locally and on GitHub. A clone can 
    contain one ore more branches.

What is the benefit of having a copy of the last known state of the remote stored locally?

    I'm not quite sure what the question implies. "Last known state"? I am not mentally persent at 
    the moment. I will have to think about this for a wbile, and write my answer a bit later.

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

    I haven't got much experience in collaborating, so it's hard to say, apart from "It would be 
    hard". I guess that collaboration without Git/GitHub or similar software would be hard, un-
    less the person(s) you are collaborating with are sitting in the same room, and you would make 
    sure that you did not work on the same piece of code simultaneously. But I can not say whether 
    similar types of software would have benefits over Git/GitHub since I don't have any experience
    with such software. 

    